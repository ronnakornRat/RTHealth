### launching database
in /database directory, run
    "flask run" to run the flask app
or
    "flask run --host=0.0.0.0 --port=5000"
    "FLASK_APP=app.py FLASK_ENV=development flask run --port=5000"

to change the host

### migrating database (update it)###
in /database directory, run
    "flask db migrate" to generates the migration script
    "flask db upgrade" to apply the changes to the database

availiable API
'user' table
    (optional) id = db.Column(db.Integer, primary_key=True)
    # actual name appears on google account
    username = db.Column(db.String(80), unique=True, nullable=False)
    # the 'sub' in google response
    google_user_id = db.Column(db.String(30), unique=True, nullable=False, default='user')
    session_token = db.Column(db.String(100), unique=True, nullable=False,  default='token')
    (optional) time_created = db.Column(db.DateTime, default=datetime.now)

'session' / 'recording' table
<tbd>

/users
    GET
        return list of users (as list of dict)
    POST
        require: username
        make a new user
/users/<username>
    GET
        return info of specified username
    POST
        require: username
        change the username of specified username
    DELETE
        delete user with specified username

/users/<username>/login
    POST
        required: idtoken
        register the token
        send back the (google) user id for frontend

/google/<user_id>/verify
    GET
        verify the validity of token
        send back the (google) user id for frontend


signout issues
gapi.auth2.getAuthInstance().isSignedIn.get() result when reading directly from the page is different from reading via script
considering
- signout function to call database api that will invalidate the token